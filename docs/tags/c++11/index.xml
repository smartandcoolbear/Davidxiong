<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43;11 on 熊川樘技术博客</title>
    <link>https://smartandcoolbear.github.io/Davidxiong/tags/c&#43;&#43;11/</link>
    <description>Recent content in C&#43;&#43;11 on 熊川樘技术博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><atom:link href="https://smartandcoolbear.github.io/Davidxiong/tags/c++11/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43;11一些新特性汇总</title>
      <link>https://smartandcoolbear.github.io/Davidxiong/posts/2016/c&#43;&#43;11%E4%B8%80%E4%BA%9B%E6%96%B0%E7%89%B9%E6%80%A7%E6%B1%87%E6%80%BB/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://smartandcoolbear.github.io/Davidxiong/posts/2016/c&#43;&#43;11%E4%B8%80%E4%BA%9B%E6%96%B0%E7%89%B9%E6%80%A7%E6%B1%87%E6%80%BB/</guid>
      <description>项目中用到了一些C++11的特性，主要包括：1.Lambda表达式与std::bind, std::function 2.auto自动类型推导 3.nullptr空指针 4.智能指针。此外，还有一些对于template的使用，动态DLL的调用， 以及程序架构的分析，由于不属于C++11这块的东西，因此都放在下次再做介绍。
相关链接：
1.C++ 中的 Lambda 表达式
2.C++11 新特性：Lambda 表达式
3.Lambda 表达式有何用处？如何使用？
4.C/C++ 中 0 与 NULL 区别是什么？用 delete 时，用 p=0，还是用 p=NULL 好？为什么？
5.c++ 智能指针用法详解
Lamda的表达式理解与使用 Lamda表达式的描述是这样：In C++11, a lambda expression—often called a lambda—is a convenient way of defining an anonymous function object right at the location where it is invoked or passed as an argument to a function (在 C++ 11 中，lambda 表达式（通常称为 &amp;ldquo;lambda&amp;rdquo;）是一种在被调用的位置或作为参数传递给函数的位置定义匿名函数对象的简便方法)。我的理解是，简单来讲，就是将一个匿名函数作为参数传递给另一个函数，并在另一个函数中进行调用。
 Lamda的表达式各部分  ISO C++ 标准展示了作为第三个参数传递给 std::sort() 函数的简单 lambda：</description>
    </item>
    
  </channel>
</rss>
